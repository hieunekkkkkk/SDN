import React, { useState, useEffect } from 'react';
import Header from '../../components/Header';
import Footer from '../../components/Footer';
import { useNavigate } from 'react-router-dom';
import '../../css/PersonalizedPage.css';


function PersonalizedPage() {
    const [type, setType] = useState('Boarding');
    const [budget, setBudget] = useState('50,000');
    const [rating, setRating] = useState(5);
    const [bestPlaces, setBestPlaces] = useState([]);
    const navigate = useNavigate();

    useEffect(() => {
        const fetchBusinesses = async () => {
            try {
                const res = await fetch(`${import.meta.env.VITE_BE_URL}/api/business`);
                const data = await res.json();
                const sorted = data.businesses
                    .filter(b => b.business_rating) // only businesses with ratings
                    .sort((a, b) => b.business_rating - a.business_rating)
                    .slice(0, 6);

                setBestPlaces(sorted);
                console.log(sorted);

            } catch (error) {
                console.error('Failed to load businesses:', error);
            }
        };

        fetchBusinesses();
    }, []);

    return (
        <>
            <Header />
            <div className="personalized-page">
                {/* Welcome Section */}
                <div className="personalized-welcome-section">
                    {/* Left Text Section */}
                    <div className="personalized-welcome-text">
                        <h1 className="personalized-welcome-title">
                            Ch√†o m·ª´ng ƒë·∫øn v·ªõi tr·ª£ l√Ω t√¨m ki·∫øm ho√†n h·∫£o!
                        </h1>

                        <div className="personalized-welcome-content">
                            <div className="personalized-welcome-item">
                                <span className="personalized-icon">üé´</span>
                                <div>
                                    <p className="personalized-item-title">
                                        T√¨m ki·∫øm nhu c·∫ßu - ƒë√∫ng ng∆∞·ªùi, ƒë√∫ng th·ªùi ƒëi·ªÉm
                                    </p>
                                    <p className="personalized-item-description">
                                        H·ªó tr·ª£ ng∆∞·ªùi d√πng th√¥ng qua l·ª±a ch·ªçn ti√™u ch√≠ v√† ng√†nh c·∫ßn t√¨m ki·∫øm (nh∆∞ ƒë·ªãa ƒëi·ªÉm, m·ª©c ti√™u, s·ªë ƒë√≠ch), ƒë·ªÉ ƒë∆∞a xu h∆∞·ªõng k·∫øt qu·∫£ ph√π h·ª£p t·ªëi ∆∞u theo t·ª´ng c√° nh√¢n, kh√¥ng c·∫ßn ph·∫£i l·ªçc c√¥ng.
                                    </p>
                                </div>
                            </div>

                            <div className="personalized-welcome-item">
                                <span className="personalized-icon">üéà</span>
                                <div>
                                    <p className="personalized-item-title">
                                        Giao di·ªán th√¥ng minh - k·∫øt h·ª£p gi·ªØa chatbot v√† t√πy ch·ªçn linh ho·∫°t
                                    </p>
                                    <p className="personalized-item-description">
                                        Ng∆∞·ªùi d√πng c√≥ th·ªÉ t∆∞∆°ng t√°c nhanh qua chatbot ho·∫∑c s·ª≠ d·ª•ng c√°c t√πy ch·ªçn s·∫µn c√≥ ƒë·ªÉ t√¨m ki·∫øm ch√≠nh x√°c.
                                    </p>
                                </div>
                            </div>

                            <div className="personalized-welcome-item">
                                <span className="personalized-icon">üíé</span>
                                <div>
                                    <p className="personalized-item-title">
                                        ƒê·ªìng c∆° ƒë·ªÉ xu·∫•t th√¥ng minh - h·ªçc t·ª´ nh√¢n vi√™n, li√™n t·ª•c t·ªëi ∆∞u
                                    </p>
                                    <p className="personalized-item-description">
                                        H·ªá th·ªëng AI ƒë·ªÉ h·ªçc h√†nh vi ng∆∞·ªùi d√πng: c√°c t√¨m ki·∫øm tr∆∞·ªõc, l∆∞·ª£t nh·∫•n, th·ªùi gian xem,... ƒë·ªÉ ƒë∆∞a d·ª± ƒëo√°n ra g·ª£i √Ω th√¥ng minh v√† s√°t v·ªõi nhu c·∫ßu h∆°n theo th·ªùi gian.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    {/* Right Image Section */}
                    <div className="personalized-welcome-image">
                        <div className="personalized-image-placeholder">
                            <img src="../public/1.png" alt="Welcome Image" />
                        </div>
                    </div>
                </div>

                {/* Search Section */}
                <div className="personalized-search-section">
                    {/* Filter Section */}
                    <div className="personalized-filter-container">
                        <h2 className="personalized-search-title">
                            Tr·ªü l√£i ·ªü gi√∫p t√¨m ki·∫øm theo y√™u c·∫ßu c·ªßa b·∫°n!
                        </h2>
                        <p className="personalized-search-subtitle">
                            Gi√∫p t√¨m ki·∫øm theo nhu c·∫ßu c·ªßa c√° nh√¢n h√≥a, th√™m v√†o danh s√°ch y√™u th√≠ch ƒë·ªÉ chia.
                        </p>
                        <p className="personalized-filter-info">
                            <span className="personalized-filter-label">Ti√™u ch√≠ c·ªßa b·∫°n:</span> L·ª±a ch·ªçn ti√™u ch√≠ gi√∫p tr·ªü l√Ω AI ƒë∆∞a ra l·ª±a ch·ªçn ph√π h·ª£p nh·∫•t cho b·∫°n!
                        </p>

                        {/* Type Filter */}
                        <div className="personalized-filter-group">
                            <label className="personalized-filter-label">Type:</label>
                            <div className="personalized-filter-options">
                                {['Boarding', 'Restaurant', 'Pharmacy', 'Other...'].map((option) => (
                                    <button
                                        key={option}
                                        onClick={() => setType(option)}
                                        className={`personalized-filter-button ${type === option ? 'personalized-active' : ''}`}
                                    >
                                        {option}
                                    </button>
                                ))}
                            </div>
                        </div>

                        {/* Budget Filter */}
                        <div className="personalized-filter-group">
                            <label className="personalized-filter-label">Budget:</label>
                            <div className="personalized-filter-options">
                                {['50,000', '100,000', '500,000', '1,500,000', 'Above...'].map((option) => (
                                    <button
                                        key={option}
                                        onClick={() => setBudget(option)}
                                        className={`personalized-filter-button ${budget === option ? 'personalized-active' : ''}`}
                                    >
                                        {option}
                                    </button>
                                ))}
                            </div>
                        </div>

                        {/* Rating Filter */}
                        <div className="personalized-filter-group">
                            <label className="personalized-filter-label">Ratings:</label>
                            <div className="personalized-rating-options">
                                {[1, 2, 3, 4, 5].map((star) => (
                                    <span
                                        key={star}
                                        className={`personalized-star-rating ${star <= rating ? 'personalized-active' : ''}`}
                                        onClick={() => setRating(star)}
                                    >
                                        ‚òÖ
                                    </span>
                                ))}
                            </div>
                        </div>

                        {/* Chatbot Prompt */}
                        <div className="personalized-chatbot-prompt">
                            <span className="personalized-prompt-icon">‚ù§Ô∏è C√¢u h·ªèi n·ªïi b·∫≠t:</span>
                            <p className="personalized-prompt-text">
                                üìçL·ª±a ch·ªçn ti√™u ch√≠ gi√∫p tr·ª£ l√Ω AI ƒë∆∞a ra l·ª±a ch·ªçn ph√π h·ª£p nh·∫•t cho b·∫°n!
                            </p>
                        </div>
                    </div>
                </div>

                {/* Best Places Section */}
                <section className="personalized-best-places-section">
                    <div className="container">
                        <h2>ƒê·ªãa ƒëi·ªÉm g·ª£i √Ω</h2>
                        <div className="personalized-places-grid">
                            {bestPlaces.map((place) => (
                                <div key={place.business_id} className="personalized-place-card" onClick={() => navigate(`/business/${place._id}`)} style={{ cursor: 'pointer' }}>
                                    <div className="personalized-place-image">
                                        <img src={place.business_image[0] || 'default-image.png'} alt={place.business_name} />
                                    </div>
                                    <div className="personalized-place-info">
                                        <span className="personalized-status">{place.business_active === 'active' ? <p className='personalized-status place-open'>ƒêang m·ªü c·ª≠a</p> : <p className='personalized-status place-close'>T·∫°m ƒë√≥ng c·ª≠a</p>}</span>
                                        <h3>{place.business_name}</h3>
                                        <p className="personalized-place-location">{place.business_address}</p>
                                        <div className="personalized-place-meta">
                                            <span className="personalized-rating">‚≠ê {place.business_rating}</span>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </section>
            </div>
            <Footer />
        </>
    );
}

export default PersonalizedPage;